// : ! ;
// : * ;
: TIB   8 @ ;     : >IN   12 ;
: (H)  16 ;       : (L)   20 ;
: BASE 24 ;       : STATE 28 ; 
: SP0  32 @ ;     : RP0   36 @ ; 
: (DSP) 40 ;      : (RSP) 44 ; 
: DSP (DSP) @ ;   : RSP (RSP) @ ;
: !SP 0 (DSP) ! ; : !RSP 0 (RSP) ! ;
: HERE (H) @ ;    : LAST (L) @ ;
: CELL 4 ;        : ADDR 2 ; 
: CELLS 4 * ;     : CELL+ 4 + ;
: NIP SWAP DROP ;
: TUCK SWAP OVER ;
: 2DROP DROP DROP ;
: 2DUP OVER OVER ;
: / /MOD NIP ;
: MOD /MOD DROP ;
: */ >R * R> / ;
: */MOD >R * R> /MOD ;
// : + ;
: +! TUCK @ + SWAP ! ;
// : - ;
// : /MOD ;
// : < ;
// : = ;
// : > ;
// : NOT ;
: 0< 0 < ;
: 0= 0 = ;
: 0> 0 > ;
// : 1+ ;
// : 1- ;
: 2+ 1+ 1+ ;
: 2- 1- 1- ;
// : 2/ ;
// : >R ;
: ?DUP IF- DUP THEN ;
// : @ ;
: NEGATE 0 SWAP - ;
: ABS DUP 0< IF NEGATE THEN ;
// : AND ;
// : C! ;
// : C@ ;
: CMOVE ;
: CMOVE> ;
: COUNT DUP 1+ SWAP C@ ;
: D+ ;
: D< ;
: DEPTH ;
: DNEGATE ;
// : DROP ;
// : DUP ;
: EXECUTE ;
: EXIT ;
: FILL ;
: I ;
: J ;
//: ELSE ;
// : OR ;
// : OVER ;
: DEPTH DSP 1- ;
: PICK DEPTH SWAP - 1- CELLS SP0 + @ ;
// : R> ;
// : R@ ;
: ROLL ;
: ROT >R SWAP R> SWAP ;
: -ROT SWAP >R SWAP R> ;
: MIN 2DUP < IF DROP ELSE NIP THEN ;
: MAX 2DUP > IF DROP ELSE NIP THEN ;
: BETWEEN ROT DUP >R MIN MAX R> = ;
// : SWAP ;
: U< ;
: UM* ;
: UM/MOD ;
// : XOR ;
: BLOCK ;
: BUFFER ;
: CR #13 EMIT #10 EMIT ;
// : EMIT ;
: EXPECT ;
: FLUSH ;
: KEY ;
: SAVE-BUFFERS ;
: SPACE $20 EMIT ;
: SPACES IF- BEGIN SPACE 1- WHILE- THEN DROP ;
: TYPE IF- BEGIN >R DUP C@ EMIT 1+ R> 1- WHILE- THEN 2DROP ;
: UPDATE ;
: # ;
: #> ;
: #S ;
: #TIB ;
: ' ;
// : ( ;
: -TRAILING ;
// : . ;
: .( ;
: <# ;
// : >BODY ;
// : >IN ;
: ABORT ;
// : BASE ;
: BLK ;
: CONVERT ;
: HEX $10 BASE ! ;
: DECIMAL #10 BASE ! ;
: DEFINITIONS ;
// : FIND ;
: FORGET ;
: FORTH ;
: FORTH-83 ;
: HOLD ;
: LOAD ;
: PAD ;
: QUIT ;
: SIGN ;
: SPAN ;
// : TIB ;
: U. ;
// : WORD ;
: +LOOP ;
// : , ;
: .\" ;
// : : ;
// : ; ;
: ABORT\" ;
: ALLOT HERE + (HERE) ! ;
// : BEGIN ;
: COMPILE ;
// : CONSTANT ;
// : CREATE ;
: DO ;
: DOES> ;
// : ELSE ;
// : IF ;
: IMMEDIATE ;
// : LEAVE ;
: LITERAL ;
: LOOP ;
: REPEAT ;
// : STATE ;
// : THEN ;
// : UNTIL ;
// : VARIABLE ;
: VOCABULARY ;
// : WHILE ;
: [ 0 STATE ! ;
: ] 1 STATE ! ;
: ['] [ ' ] ;
: [COMPILE] ;
: .WORD ADDR + 1+ COUNT TYPE ;
: WORDS LAST BEGIN DUP .WORD SPACE A@ WHILE- DROP ;
