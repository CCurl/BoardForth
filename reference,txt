name
---------------
include
(input)
mux!A
mux!
mux@A
mux@
mux-output
mux-init
mux-select
z
(z)
s3
(s3)
s2
(s2)
s1
(s1)
s0
(s0)
mux!
mux
(mux)
mux-words
pad               (--n)           ; n: the address of a temp buffer used by .
forget-1          (--)            ; forgets the last defined word
forget            (--)            ; resets the dictionary to the state after 'marker'
marker            (--)            ; marks the current state of the dictionary
(vh)              (--v)           ; v: the value of VHERE for marker
(nw)              (--v)           ; v: the value of NUM-WORDS for marker
(cl)              (--v)           ; v: the value of LAST for marker
(ch)              (--v            ; v: the value of HERE for marker
elapsed           (T--)           ; T: Time - Print elapsed MS since T
dump-dict         (--)            ; Dumps the CODE part of the dictionary 
dump              (f t--)         ; Dumps memory from f through t
.b                (c--)           ; c: a byte. Prints c with leading zeros to width 3
wordsl            (--)            ; Prints the list of words (long form)
words             (--)            ; Prints the list of words
auto-off          (--)            ; Sets address 0 to 0. This stops auto-run
auto-last         (--)            ; Sets auto-run to the XT of the LAST word
auto-run          (a--)           ; a: an XT. Sets auto-run to a
>body             (d--a)          ; d: a dictionary entry. a: the XT of d
allot             (n--)           ; n: numbrt of bytes to reserve
between           (x a b--f)      ; x: a number, a: min, b:max, f: -1 if a <= x <= b else 0
max               (a b--n)        ; n: if a < b then b, else a
min               (a b--n)        ; n: if a < b then a, else b
high->low         (x y--a b)      ; a: max(x, y), b: min(x,y)
low->high         (x y--a b)      ; a: min(x, y), b: max(x,y)
binary            (--)            ; set the BASE to binary
decimal           (--)            ; set the BASE to decimal
hex               (--)            ; set the BASE to hex
abs               (n--u)          ; u: the absolute vaue of n
on                (a--)           ; store 1 into a
off               (a--)           ; store 0 into a
negate            (n1--n2)        ; 
+!                (n a--)         ; 
2drop             (x y--)         ; 
2dup              (x y--x y x y)  ; 
-rot              (c b a--b a c)  ; 
rot               (c b a--a c b)  ; 
tab               (--)            ; 
cr                (--)            ; 
spaces            (n--)           ; 
space             (--)            ; 
bl                (--)            ; 
2/                (a--b)          ; 
2*                (a--b)          ; 
/                 (x y--q)        ; 
mod               (x y--r)        ; 
?dup              (n--(n n)|n)    ; 
tuck              (a b--b a b)    ; 
0sp               (n... --)       ; 
depth             (--n)           ; 
dstack            (--a)           ; 
(dsp)             (--a)           ; 
tib               (--a)           ; 
state             (--a)           ; 
base              (--a)           ; 
vhere             (--n)           ; 
(vhere)           (--a)           ; 
last              (--n)           ; 
(last)            (--a)           ; 
here              (--n)           ; 
(here)            (--a)           ; 
num-words         (--n)           ; 
(num-words)       (--a)           ; 
vars-sz           (--n)           ; 
vars              (--a)           ; 
entry-sz          (--n)           ; 
dict-sz           (--n)           ; 
dict              (--a)           ; 
addr              (--n)           ; 
cells             (x--y)          ; 
cell              (--n)           ; 
forth             (--n)           ; 
definitions       (n--)           ; 
(lexicon)         (--a)           ; 

Primitives: NOP CALL RET JMP BRANCH ZBRANCH NZBRANCH BLIT WLIT LIT DUP SWAP OVER @ ! + - * /MOD AND NAND OR XOR COM < = <> 0= > NIP c@ DROP MS TIMER w@ a@ c! w! a! U/MOD rshift lshift 1- 1+ >r r@ r> COUNT TYPE EMIT                           (.) . U. .N .S FOR I J K NEXT BREAK BEGIN AGAIN WHILE WHILE- UNTIL C, W, , A, NEXTWORD FIND MALLOC FREE FILL ZCOUNT ZTYPE DEBUG-MODE FOPEN FCLOSE FREAD FWRITE INPUT PULLUP OUTPUT pin@ pin! apin@ apin! GP.X GP.Y GP.PRESS GP.RELEASE GP.PAD1 GP.PAD2 GP.RELEASEALL GP.WRITE COM-OPEN COM-READ COM-WRITE COM-CLOSE                           (WORDS) FORTH-SOURCE BYE ok                           ()
